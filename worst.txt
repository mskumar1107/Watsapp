Socket (TCP)

At Server:
 
step 1: Create a socket

int fd = socket (Domain, Socket Type, Protocol);

step 2: Need to bind to a port number and the address
 
bind(sockfd, struct sock_addrs *sock, length of the sock_addrs struct);

step 3: After binding to a socket, it should listen for connection

listen(fd, Backlog);

step 4: Accept the valid connection

int fd = accept(sockfd, struct sock_addrs *sock, length of the sock_addrs);

step 5: Performs Read (what client have requested)

receive (fd, buffer, len);

step 6: Write back to client with the requested information

send (fd, buffer, len);
==============================

At Client:

step 1: Create socket at the client side

int fd = socket(Domain, Socket Type, Protocol);

step 2: Establishes Connection to the server socket

connect(fd, struct sock_addrs *sock, len);

step 3: After connection, it requests for information from the server

send(fd, buffer, len);

step 4: Receives information from the Server Socket through Receive()

receive(fd, buffer, len);
====================================================================================

#include <stdio.h>
#define SQUARE(x,res) res = (x)*(x);

int main() {
    int x = 2;
    int y = 4;
    int res = 0;
    SQUARE (x+y, res);
    printf("%d\n",res);
}

#include <stdio.h>
#define SQUARE(x) { return x*x }

int main()
{
    int x = 2;
    int res = 0;
    res = SQUARE(x);
    printf("%d\n", res);
}

